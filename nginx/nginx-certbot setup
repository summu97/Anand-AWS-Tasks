RUN: sudo apt install certbot python3-certbot-nginx -y
 
âœ… Here's why it's still trusted in browsers:
- Certificates issued by Let's Encrypt (via Certbot) are automatically trusted in browsers because:
- They are signed by a globally trusted Certificate Authority (CA).
- Browsers already include Let's Encrypt's root and intermediate certificates in their built-in trusted certificate stores.
- Configure Nginx to Reverse Proxy with SSL
-------------------------------------------------------------
Create or modify the Nginx config: 
RUN: sudo vim /etc/nginx/sites-available/<Domain_name>
NOTE: Scenario i used this(Application already runs on https and i again applied https to its domain using nginx)

Paste the following:

server {
    listen 80;
    server_name your-domain.com;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name your-domain.com;

    location / {
        proxy_pass https://<VM-PublicIP>:<Port>;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


-------------------------------------------------------------
Enable the Site and Reload Nginx
RUN: sudo ln -s /etc/nginx/sites-available/<Domain_name> /etc/nginx/sites-enabled/
RUN: sudo nginx -t
RUN: sudo systemctl reload nginx
-------------------------------------------------------------
RUN: sudo certbot --nginx -d youdomain

NOTE: After you run above command new lines add to your configuration like:

server {
    listen 80;
    server_name your-domain.com;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name your-domain.com;

    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass https://<VM-PublicIP>:<Port>;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

-------------------------------------------------------------
Access your application using: your-domain.com
-------------------------------------------------------------




Useful for Debug:
RUN: sudo tail -n 30 /var/log/nginx/error.log
RUN: sudo lsof -i :8443
RUN: sudo ufw allow 8443/tcp
RUN: sudo ufw reload
RUN: sudo ufw status
-------------------------------------------------------------
Exampe configurations:

server {
server_name your-domain.com;
 
    location / {
proxy_pass http://<VM-PublicIP>:<Port>;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
 
    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
 
}
 
server {
if ($host = your-domain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
 
 
    listen 80;
server_name your-domain.com;
    return 404; # managed by Certbot
 
 
}
