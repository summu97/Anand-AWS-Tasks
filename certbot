Create or modify the Nginx config: 
sudo vim /etc/nginx/sites-available/n8n.techdomeaks.com

server {
    listen 80;
    listen [::]:80;
    server_name n8n.techdomeaks.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name n8n.techdomeaks.com;

    ssl_certificate /etc/letsencrypt/live/n8n.techdomeaks.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/n8n.techdomeaks.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://135.13.13.70:5678/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_redirect http://135.13.13.70:5678/ https://n8n.techdomeaks.com/;
    }
}
----------------------------------------------------------
sudo vim /etc/nginx/sites-available/mail.techdomeaks.com

server {
    listen 80;
    listen [::]:80;
    server_name mail.techdomeaks.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name mail.techdomeaks.com;

    ssl_certificate /etc/letsencrypt/live/mail.techdomeaks.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mail.techdomeaks.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://135.13.13.70:2443/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_redirect http://135.13.13.70:2443/ https://mail.techdomeaks.com/;
    }
}
--------------------------------------------------------------------
sudo vim /etc/nginx/sites-available/flowise.techdomeaks.com

server {
    listen 80;
    listen [::]:80;
    server_name flowise.techdomeaks.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name flowise.techdomeaks.com;

    ssl_certificate /etc/letsencrypt/live/flowise.techdomeaks.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/flowise.techdomeaks.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://135.13.13.70:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_redirect http://135.13.13.70:3000/ https://flowise.techdomeaks.com/;
    }
}
--------------------------------------------------------------------------------
Enable the Site and Reload Nginx:
sudo ln -s /etc/nginx/sites-available/n8n.techdomeaks.com /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/flowise.techdomeaks.com /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/mail.techdomeaks.com /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx
----------------------------------
I wanted to inform you about an issue I encountered while deploying the Billionmail application on our current VM.

Billionmail requires ports 80 and 443 for its web and secure mail services. However, these ports are already in use by two other applications that are hosted via NGINX, and are configured with certificates and domain names.

Due to this port conflict, Billionmail is failing to start and cannot bind to the required ports.

ðŸ›  Troubleshooting Done:
Verified container configuration and exposed ports

Confirmed NGINX is already using 80/443 for existing services

Considered alternative ports (e.g., 8080/8443) but this may not be optimal for production email access which relies on standard ports

âœ… Proposed Solution:
To avoid impacting the existing services, I suggest deploying Billionmail on a separate server or VM where it can use ports 80 and 443 without conflict.

This would ensure:

Clean separation of services

No disruption to existing hosted applications

Compliance with default port expectations for mail services (e.g., SMTP, IMAP, HTTPS)

Please let me know your thoughts or if you'd prefer an alternative approach such as reverse proxying with NGINX, though that could introduce added complexity.
